<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: android | 春上冰月的博客]]></title>
  <link href="http://www.caoyue.com.cn/blog/categories/android/atom.xml" rel="self"/>
  <link href="http://www.caoyue.com.cn/"/>
  <updated>2016-02-17T15:17:23+08:00</updated>
  <id>http://www.caoyue.com.cn/</id>
  <author>
    <name><![CDATA[春上冰月]]></name>
    <email><![CDATA[haruue@caoyue.com.cn]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用 retrofit2 上传文件的方法]]></title>
    <link href="http://www.caoyue.com.cn/blog/2016/02/12/How-to-upload-file-with-retrofit2/"/>
    <updated>2016-02-12T23:34:48+08:00</updated>
    <id>http://www.caoyue.com.cn/blog/2016/02/12/How-to-upload-file-with-retrofit2</id>
    <content type="html"><![CDATA[<p>被坑了两天。。感觉这个必须得记下了。。。</p>

<p>使用 retrofit2 上传一张图到服务器，服务器上使用这样的 php 语句来获取文件  <br/>
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$file = $_FILES[&lsquo;image&rsquo;];&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;&lt;code&gt;``
</span><span class='line'>ApiService 按照官方的文档使用&lt;/code&gt;Multipart`就好，用不用 PartMap 就看喜好了&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;!--More--&gt;
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code class="Java"&gt;@Multipart
</span><span class='line'>@POST("uploadImage.php")
</span><span class='line'>Call&lt;UploadInformationTransfer&gt; uploadImage(@PartMap Map&lt;String, RequestBody&gt; params);
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;所有的参数都要用&lt;code&gt;RequestBody&lt;/code&gt;包装一下  &lt;br/&gt;</span></code></pre></td></tr></table></div></figure> Java
// 传入的纯文本 POST 参数，使用 $_POST[&lsquo;field&rsquo;] 来获取
RequestBody apikey = RequestBody.create(MediaType.parse(&ldquo;text/plain&rdquo;), ApiKeys.HARUUE_STORAGE_SERVER_2_APIKEY);
RequestBody use = RequestBody.create(MediaType.parse(&ldquo;text/plain&rdquo;), &ldquo;face&rdquo;);</p>

<p>// 传入的文件参数，使用 $_FILES[&lsquo;field&rsquo;] 来获取
RequestBody imgFile = RequestBody.create(MediaType.parse(&ldquo;image/jpeg&rdquo;), file);</p>

<pre><code>然后把它们加入 PartMap ，如果不使用 PartMap ，把对应部分填到 @Part("field") 里去也可以    
</code></pre>

<p>Map&lt;String, RequestBody> partMap = new HashMap&lt;>();
partMap.put(&ldquo;apikey&rdquo;, apikey);
partMap.put(&ldquo;use&rdquo;, use);
partMap.put(&ldquo;image\&rdquo;; filename=\&ldquo;upload.jpg\&rdquo;&ldquo;, imgFile);</p>

<pre><code>然后把这个 partMap 传入对应函数中，大功告成。。。    

&lt;del&gt;看起来很简单就像是 FormUrlEncoded 一样，然而，发现坑没有？&lt;/del&gt;    

__注意：__在传入文件的时候，使用    
</code></pre>

<p>partMap.put(&ldquo;image\&rdquo;; filename=\&ldquo;upload.jpg\&rdquo;&ldquo;, imgFile);</p>

<pre><code>实际上，上传的文件名与系统中存储的文件的真实文件名没有关系，只与这个字符串有关系。。。    
所以，如果需要在服务器上使用`$_FILES['参数名']`来获取上传的文件，那么上传的时候就应该写    
</code></pre>

<p>// 使用 PartMap
partMap.put(&ldquo;参数名\&rdquo;; filename=\&ldquo;文件名\&rdquo;&ldquo;, imgFile);</p>

<p>// 直接在定义 ApiService 时使用 @Part 注释
Call&lt;&hellip;> upload(&hellip;, @Part(&ldquo;参数名\&rdquo;; filename=\&ldquo;文件名\&rdquo;&ldquo;) RequestBody file, &hellip;);</p>

<pre><code>因此，如果需要文件名可变，那么就必须使用 PartMap 
</code></pre>

<p>partMap.put(&ldquo;参数名\&rdquo;; filename=\&ldquo;&rdquo; + filename + &ldquo;\&rdquo;&ldquo;, imgFile);</p>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coolpad 5261 的 root 与刷机方法]]></title>
    <link href="http://www.caoyue.com.cn/blog/2015/09/17/coolpad-5261-de-root-yu-shua-ji-fang-fa/"/>
    <updated>2015-09-17T13:31:28+08:00</updated>
    <id>http://www.caoyue.com.cn/blog/2015/09/17/coolpad-5261-de-root-yu-shua-ji-fang-fa</id>
    <content type="html"><![CDATA[<p>其实这篇文章没有什么技术含量的。。。用的工具、文件什么的差不多都是现成的。。。<br />
写这篇文章的纯粹目的，只是因为网上几乎没有这部手机相关的东西，放一个作为一个备忘，顺便为以后破解国产机提供一种思路。<br />
<br />
首先说一下这部机子的来历：我们学校的电信宽带是办宽带赠(kun)送(bang)手机的，由于本来有手机就选了个最便宜的，于是就拿到了这部“连官网上都找不到的机子”<br /></p>

<div>
<img src="http://www.caoyue.com.cn/images/blog/20150917/001.jpg" style="height: 40%; width: 40%; float: left ;" />
<img src="http://www.caoyue.com.cn/images/blog/20150917/002.jpg" style="height: 40%; width: 40%; float: left ;" />
</div>


<p><div style="clear: both; " />
<br />
到手的时候真是有一种“用之无味，弃之可惜”的感觉了。本来办宽带的学长说可以少35元回收掉，但是想想当时说的<del>豪言壮志</del>“这种机子就是拿来耍的”，那就还是耍一耍吧！<br />
<!--more-->
<br />
配置的话 512 MB RAM ，CPU 是高通的 MSM8909<del>（这是什么鬼？）</del>，系统是 Android 4.4 ，df 命令显示有 775MB 的 /system 分区以及 248M 的 /cache 分区 ，另外这货的 /data 分区和内置存储卡是共用空间的（虽然只有 1.6GB ），令人惊讶是这货居然支持 zram 和 swap 。。。<br />
<br />
好吧，废话+吐槽到此结束。。。<br />
<br />
首先，这部机子虽说在学校稍微普遍一点（电信赠(kun)送(bang)的影响），但在网上几乎找不到，还好有位好心人上传了个 <a target="_blank" href="http://pan.baidu.com/s/1mgMoxSG">5261售后专用线刷救砖包.zip</a> ，用 MiFlash 就可以给这部手机刷机了<del>（怎么又和小米扯上关系了）</del>。<br />
<br />
不管怎么样，先刷了再说。。。<br />
<br />
按照它提供的方法，装好驱动（Windows 8 需要关闭驱动强制签名）和 MiFlash ，把 5261售后专用线刷救砖包.zip/酷派进Qdload模式用MIFLASHTOOL刷.zip/酷派进Qdload模式/ 下面的 #dload#.d 和 !dload!.l 拷贝到 SD 卡，插拔一次电池，将手机连接电脑，打开MiFlash，点几下[刷新]，然后选择那个有刷机文件的文件夹，点击[刷机]就开刷了。。。<br />
<br />
刷好之后，拔下 SD 卡，长按电源键就可以开机，话说第一次开机确实挺久的。。。<br />
<br />
一进系统，发现系统果然变了不少，以前只有企鹅管家，现在居然上了大数字全家桶，看来那些国厂为了我国国民信息安全真是费(shang)尽(xin)心(bing)机(kuang)！！！<br />
<br />
不过倒是终于找到了一种能改系统的方法，<del>那就好办多了</del>。<br />
<br />
本来的想法是先把刷机包里的 system_1.img 到 system_7.img 合并一下，到 Linux 下面挂载，耍好之后重新拆开，然后看看能不能刷上去，结果并好的包在 Linux 上死活不能挂载，虽然 file 命令显示它就是一个正常的，可以挂载的 img 。<br />
<br />
那就另寻捷径了，上网一搜发现了一款叫 <a target="_blank" href="http://www.romzhushou.com/">ROM助手</a> 的软件，说是能直接修改 img 文件，虽说看里面的功能有点内置程序赚钱的感觉，但是能抓到耗子的猫就是好猫吧，拿来试试再说。<br />
<br />
ROM助手 自带 img 合并拆分，那就先合并掉，然后用自带的编辑功能编辑一下合并好的 img ，把所有多余的内置删掉，然后再把 SuperSU 相关的文件全部放进去，再重新拆开。。。这些步骤都很简单，这里就不多说了<del>（我说了这篇文章一点技术含量都没有的）</del>。<br />
<br />
然后就用分解好的 img 文件以及输出的 rawprogram_unsparse.xml 把之前刷机文件夹里的文件覆盖掉，再用 MiFlash 刷一次机。开机，root 就已经搞定了！<br />
<br />
另外发现这货在 fastboot 模式下面进行 fastboot flash 的时候是不做检查的，能做什么就不知道了，或许以后可以编译个 recovery 放进去吧，这样刷机过程可能就正常一些了。。。</p>
]]></content>
  </entry>
  
</feed>
